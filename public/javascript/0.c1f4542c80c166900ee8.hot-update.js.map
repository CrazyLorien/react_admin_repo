{"version":3,"sources":["webpack:///./roles/chooseRoles.jsx?0915"],"names":["ChooseRoles","props","role","name","Roles","user","length","checkRoles","_id","updateClientUser","roles","newRoles","index","count","filter","ur","ind","push","splice","concat","undefined","userRoles","map","checked","urole","selectRole","bind","Permissions"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;KAEMA,W;;;AACF,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA,+HACRA,KADQ;;AAEd;AAFc;AAGjB;;;;oCAEUC,I,EAAK;AACb,iBAAG,CAACA,KAAKC,IAAT,EACK;AACL,iBAAIC,QAAS,KAAKH,KAAL,CAAWI,IAAX,CAAgBD,KAAhB,CAAsBE,MAAtB,KAAiC,CAAjC,GACD,KAAKC,UAAL,CAAgB,KAAKN,KAAL,CAAWI,IAAX,CAAgBD,KAAhC,EAAuCF,IAAvC,CADC,GAEF,CAACA,IAAD,CAFX;;AAIA,kBAAKD,KAAL,CAAWI,IAAX,CAAgBD,KAAhB,GAAwBA,KAAxB;;AAEC,iBAAG,KAAKH,KAAL,CAAWI,IAAX,CAAgBG,GAAnB,EACI,KAAKP,KAAL,CAAWQ,gBAAX,CAA4B,KAAKR,KAAL,CAAWI,IAAvC;AACJ;AACA;AACH;;;oCAEUK,K,EAAOR,I,EAAK;AACnB,iBAAIS,WAAW,EAAf;AACA,iBAAIC,QAAQ,CAAC,CAAb;AACA,iBAAIC,QAAQH,MAAMI,MAAN,CAAa,UAACC,EAAD,EAAKC,GAAL,EAAa;AAClC,qBAAGD,GAAGZ,IAAH,KAAYD,KAAKC,IAApB,EAAyB;AACrB,4BAAOY,EAAP;AACH,kBAFD,MAGI;AACAH,6BAAQI,GAAR;AACH;AACJ,cAPW,CAAZ;;AASA,iBAAGH,MAAMP,MAAN,GAAe,CAAlB,EACA;AACII,uBAAMO,IAAN,CAAWf,IAAX;AACH,cAHD,MAII;AACAQ,uBAAMQ,MAAN,CAAaN,KAAb,EAAoB,CAApB;AACH;;AAED,oBAAOD,SAASQ,MAAT,CAAgBT,KAAhB,CAAP;AACH;;;kCAEQ;AAAA;;AACL,oBAAQ,KAAKT,KAAL,CAAWS,KAAX,IAAoBU,SAApB,IACG,KAAKnB,KAAL,CAAWoB,SAAX,IAAwBD,SAD3B,IACwC,KAAKnB,KAAL,CAAWI,IAAX,CAAgBG,GADzD,GAGK;AAAA;AAAA,mBAAK,WAAU,sBAAf;AACI;AAAA;AAAA;AAAA;AAAA,kBADJ;AAEI;AAAA;AAAA;AAEQ,0BAAKP,KAAL,CAAWS,KAAX,CAAiBY,GAAjB,CAAqB,UAACpB,IAAD,EAAU;AAC3B,6BAAIqB,UAAU,OAAKtB,KAAL,CAAWoB,SAAX,CAAqBP,MAArB,CAA6B,UAACU,KAAD;AAAA,oCAAWA,MAAMrB,IAAN,KAAeD,KAAKC,IAA/B;AAAA,0BAA7B,EAAkEG,MAAlE,GAA2E,CAAzF;AACA;AACA,gCAAQ;AAAA;AAAA,+BAAK,WAAU,KAAf,EAAqB,KAAKJ,KAAKM,GAA/B;AACI;AAAA;AAAA,mCAAK,WAAY,SAAjB;AACI,0EAAO,MAAK,UAAZ,EAAuB,IAAIN,KAAKC,IAAhC,EAAsC,SAASoB,OAA/C,EAAyD,UAAW,OAAKE,UAAL,CAAgBC,IAAhB,SAA2B,EAAEvB,MAAOD,KAAKC,IAAd,EAAoBwB,aAAazB,KAAKyB,WAAtC,EAA3B,CAApE,GADJ;AAEI;AAAA;AAAA,uCAAO,SAASzB,KAAKC,IAArB;AAA8BD,0CAAKC;AAAnC;AAFJ;AADJ,0BAAR;AAMH,sBATD;AAFR;AAFJ,cAHL,GAoBM,uCAAK,WAAU,OAAf,GApBb;AAqBH;;;;;;mBAGUH,W","file":"0.c1f4542c80c166900ee8.hot-update.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ChooseRoles extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        debugger;\r\n    }\r\n\r\n    selectRole(role){ \r\n       if(!role.name)  \r\n            return;\r\n       let Roles  = this.props.user.Roles.length !== 0 \r\n                 ? this.checkRoles(this.props.user.Roles, role)\r\n                 :[role];\r\n                               \r\n       this.props.user.Roles = Roles;\r\n\r\n        if(this.props.user._id)\r\n            this.props.updateClientUser(this.props.user);\r\n        // else\r\n        //     this.props.createUser(this.props.user)\r\n    }\r\n\r\n    checkRoles(roles, role){\r\n        let newRoles = [];\r\n        let index = -1;\r\n        var count = roles.filter((ur, ind) => { \r\n            if(ur.name !== role.name){\r\n                return ur;\r\n            }\r\n            else{\r\n                index = ind;\r\n            }\r\n        });\r\n\r\n        if(count.length > 0)\r\n        {\r\n            roles.push(role)\r\n        }\r\n        else{\r\n            roles.splice(index, 1);\r\n        }\r\n\r\n        return newRoles.concat(roles);\r\n    }\r\n   \r\n    render() {\r\n        return (this.props.roles != undefined\r\n                && this.props.userRoles != undefined && this.props.user._id\r\n                ) ? (\r\n                    <div className=\"user-roles-container\">\r\n                        <p>List of user's roles</p>\r\n                        <form>\r\n                            {\r\n                                this.props.roles.map((role) => {\r\n                                    let checked = this.props.userRoles.filter( (urole) => urole.name === role.name).length > 0;\r\n                                    //here we should check does role contain in user roles and then check or uncheck it  \r\n                                    return (<div className=\"row\" key={role._id}>\r\n                                                <div className = \"col s12\">\r\n                                                    <input type=\"checkbox\" id={role.name} checked={checked}  onChange={ this.selectRole.bind(this, { name : role.name, Permissions: role.Permissions }) }/>\r\n                                                    <label htmlFor={role.name}  >{role.name}</label>\r\n                                                </div>\r\n                                        </div>);\r\n                                })\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                ) : (<div className=\"empty\"></div>);\r\n    }\r\n}\r\n\r\nexport default ChooseRoles;\n\n\n// WEBPACK FOOTER //\n// ./roles/chooseRoles.jsx"],"sourceRoot":""}